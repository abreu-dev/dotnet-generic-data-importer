×
|C:\Users\Gabriel\Desktop\Repos\dotnet-generic-importer\backend\src\GenericImporter.Infra.Data.Core\Contexts\BaseDbContext.cs
	namespace 	
GenericImporter
 
. 
Infra 
.  
Data  $
.$ %
Core% )
.) *
Contexts* 2
{ 
public 

abstract 
class 
BaseDbContext '
:( )
	DbContext* 3
,3 4

IDbContext5 ?
{ 
	protected 
BaseDbContext 
(  
DbContextOptions  0
options1 8
)8 9
:: ;
base< @
(@ A
optionsA H
)H I
{J K
}L M
public

 
async

 
Task

 
<

 
bool

 
>

 
Commit

  &
(

& '
)

' (
{ 	
return 
await 
SaveChangesAsync )
() *
)* +
>, -
$num. /
;/ 0
} 	
} 
} È
yC:\Users\Gabriel\Desktop\Repos\dotnet-generic-importer\backend\src\GenericImporter.Infra.Data.Core\Contexts\IDbContext.cs
	namespace 	
GenericImporter
 
. 
Infra 
.  
Data  $
.$ %
Core% )
.) *
Contexts* 2
{ 
public 

	interface 

IDbContext 
:  !
IUnitOfWork" -
{ 
DbSet 
< 
T 
> 
Set 
< 
T 
> 
( 
) 
where 
T  !
:" #
class$ )
;) *
}		 
}

 ß!
}C:\Users\Gabriel\Desktop\Repos\dotnet-generic-importer\backend\src\GenericImporter.Infra.Data.Core\Repositories\Repository.cs
	namespace 	
GenericImporter
 
. 
Infra 
.  
Data  $
.$ %
Core% )
.) *
Repositories* 6
{ 
public 

abstract 
class 

Repository $
<$ %
TEntity% ,
>, -
:. /
IRepository0 ;
<; <
TEntity< C
>C D
whereE J
TEntityK R
:S T
EntityU [
{ 
private 
readonly 
BaseDbContext &
_baseDbContext' 5
;5 6
private 
readonly 
DbSet 
< 
TEntity &
>& '
_dbSet( .
;. /
	protected 

Repository 
( 
BaseDbContext *
baseDbContext+ 8
)8 9
{ 	
_baseDbContext 
= 
baseDbContext *
;* +
_dbSet 
= 
baseDbContext "
." #
Set# &
<& '
TEntity' .
>. /
(/ 0
)0 1
;1 2
} 	
public 
IUnitOfWork 

UnitOfWork %
=>& (
_baseDbContext) 7
;7 8
public 
virtual 

IQueryable !
<! "
TEntity" )
>) *
Query+ 0
(0 1
)1 2
{ 	
return 
_dbSet 
; 
} 	
public 
virtual 
async 
Task !
<! "
IEnumerable" -
<- .
TEntity. 5
>5 6
>6 7
Search8 >
(> ?

Expression? I
<I J
FuncJ N
<N O
TEntityO V
,V W
boolX \
>\ ]
>] ^
	predicate_ h
)h i
{   	
return!! 
await!! 
Query!! 
(!! 
)!!  
.!!  !
Where!!! &
(!!& '
	predicate!!' 0
)!!0 1
.!!1 2
ToListAsync!!2 =
(!!= >
)!!> ?
;!!? @
}"" 	
public$$ 
virtual$$ 
async$$ 
Task$$ !
<$$! "
IEnumerable$$" -
<$$- .
TEntity$$. 5
>$$5 6
>$$6 7
GetAll$$8 >
($$> ?
)$$? @
{%% 	
return&& 
await&& 
Query&& 
(&& 
)&&  
.&&  !
ToListAsync&&! ,
(&&, -
)&&- .
;&&. /
}'' 	
public)) 
virtual)) 
async)) 
Task)) !
<))! "
TEntity))" )
>))) *
GetById))+ 2
())2 3
Guid))3 7
id))8 :
))): ;
{** 	
return++ 
await++ 
Query++ 
(++ 
)++  
.++  !
FirstOrDefaultAsync++! 4
(++4 5
x++5 6
=>++7 9
x++: ;
.++; <
Id++< >
==++? A
id++B D
)++D E
;++E F
},, 	
public.. 
virtual.. 
void.. 
Add.. 
(..  
TEntity..  '
entity..( .
)... /
{// 	
_dbSet00 
.00 
Add00 
(00 
entity00 
)00 
;00 
}11 	
public33 
virtual33 
void33 
Update33 "
(33" #
TEntity33# *
entity33+ 1
)331 2
{44 	
_dbSet55 
.55 
Update55 
(55 
entity55  
)55  !
;55! "
}66 	
public88 
virtual88 
void88 
Remove88 "
(88" #
TEntity88# *
entity88+ 1
)881 2
{99 	
_dbSet:: 
.:: 
Remove:: 
(:: 
entity::  
)::  !
;::! "
};; 	
}<< 
}== 